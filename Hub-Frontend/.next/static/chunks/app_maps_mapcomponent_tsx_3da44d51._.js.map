{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/thilaknarasimhamurthy/Desktop/Hub-Frontend/app/maps/mapcomponent.tsx"],"sourcesContent":["'use client';\nimport React, { useState, useEffect, useRef } from 'react';\nimport type { ReactElement } from 'react';\n// Import Leaflet CSS directly\nimport 'leaflet/dist/leaflet.css';\n// Import Leaflet directly\nimport L from 'leaflet';\n\n// Define interfaces\ninterface Coordinates {\n  latitude: number;\n  longitude: number;\n}\n\ninterface Event {\n  id: string;\n  name: string;\n  description?: string;\n  category?: string;\n  location: string;\n  startDate: string;\n  endDate?: string;\n  coordinates?: Coordinates;\n  mediaLinks?: string[];\n  [key: string]: any; // Allow other properties\n}\n\ninterface MapComponentProps {\n  userCoordinates: Coordinates | null;\n  events: Event[];\n  loading: boolean;\n  onEventSelect: (event: Event) => void;\n  setUserCoordinates: (coords: Coordinates) => void;\n  distance?: number; // Add distance prop to control radius\n}\n\n// Make sure icons are defined outside component\n// Using CDN URLs to avoid any path issues\nconst defaultIconUrl = 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png';\nconst defaultRetinaUrl = 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png';\nconst defaultShadowUrl = 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png';\n\n// Fix default icon issue globally\nif (typeof window !== 'undefined') {\n  // Only run on client-side\n  delete L.Icon.Default.prototype._getIconUrl;\n  L.Icon.Default.mergeOptions({\n    iconUrl: defaultIconUrl,\n    iconRetinaUrl: defaultRetinaUrl,\n    shadowUrl: defaultShadowUrl,\n  });\n}\n\n// Custom icons (optional)\nconst createUserIcon = () => {\n  return L.icon({\n    iconUrl: defaultIconUrl,\n    iconRetinaUrl: defaultRetinaUrl,\n    shadowUrl: defaultShadowUrl,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n  });\n};\n\nconst createEventIcon = () => {\n  return L.icon({\n    iconUrl: defaultIconUrl,\n    iconRetinaUrl: defaultRetinaUrl,\n    shadowUrl: defaultShadowUrl,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n  });\n};\n\nconst MapComponent = ({ \n  userCoordinates, \n  events, \n  loading, \n  onEventSelect, \n  setUserCoordinates,\n  distance = 10 // Default to 10km radius\n}: MapComponentProps): ReactElement => {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapInstanceRef = useRef<any>(null);\n  const markersLayerRef = useRef<any>(null);\n  const userMarkerRef = useRef<any>(null);\n  const userCircleRef = useRef<any>(null);\n  const eventMarkersRef = useRef<Map<string, any>>(new Map()); // Use Map to track markers by event ID\n  \n  // Flag to track if component is mounted\n  const isMountedRef = useRef<boolean>(true);\n  \n  // Track map dimensions to detect container resizes\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n  \n  // Track if map has been initialized\n  const [isMapInitialized, setIsMapInitialized] = useState(false);\n\n  // Function to initialize the map - defined once and reused\n  const initializeMap = () => {\n    // Make sure this only runs in browser environment\n    if (typeof window === 'undefined') return;\n    \n    // Check if container exists and map hasn't been initialized yet\n    if (!mapContainerRef.current || mapInstanceRef.current) {\n      return;\n    }\n    \n    console.log(\"Initializing map\");\n    \n    try {\n      // Ensure container has dimensions before creating map\n      if (mapContainerRef.current.clientHeight === 0) {\n        mapContainerRef.current.style.height = '500px';\n      }\n      \n      // Default center (NYC)\n      const defaultCenter: [number, number] = userCoordinates \n        ? [userCoordinates.latitude, userCoordinates.longitude]\n        : [40.7128, -74.0060];\n      \n      // Create the map\n      const map = L.map(mapContainerRef.current, {\n        center: defaultCenter,\n        zoom: 12,\n        attributionControl: true,\n      });\n      \n      // Add tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      \n      // Create layer for markers\n      const markersLayer = L.layerGroup().addTo(map);\n      \n      // Store references\n      mapInstanceRef.current = map;\n      markersLayerRef.current = markersLayer;\n      \n      // Add click handler for map\n      map.on('click', (e: any) => {\n        if (setUserCoordinates && isMountedRef.current) {\n          const { lat, lng } = e.latlng;\n          setUserCoordinates({\n            latitude: lat,\n            longitude: lng\n          });\n          \n          // Log to console for debugging\n          console.log(`Map clicked at: ${lat}, ${lng}`);\n        }\n      });\n      \n      // Mark map as initialized\n      setIsMapInitialized(true);\n      \n      // Force a resize after a short timeout to ensure map renders correctly\n      setTimeout(() => {\n        if (map && isMountedRef.current) {\n          map.invalidateSize();\n          console.log(\"Map resized\");\n        }\n      }, 300);\n      \n      // If we already have user coordinates, update location immediately\n      if (userCoordinates) {\n        setTimeout(() => {\n          updateUserLocation();\n        }, 500);\n      }\n      \n      // If we already have events, update markers immediately\n      if (events.length > 0 && !loading) {\n        setTimeout(() => {\n          updateEventMarkers();\n        }, 600);\n      }\n    } catch (error) {\n      console.error(\"Error initializing map:\", error);\n    }\n  };\n  \n  // Function to update user location marker\n  const updateUserLocation = () => {\n    // Check if we're in a browser environment\n    if (typeof window === 'undefined') return;\n    \n    // Check prerequisites\n    if (!mapInstanceRef.current) {\n      console.log(\"Cannot update user location - map not initialized\");\n      return;\n    }\n    \n    if (!userCoordinates) {\n      console.log(\"Cannot update user location - no coordinates provided\");\n      return;\n    }\n    \n    if (!isMountedRef.current) {\n      console.log(\"Cannot update user location - component unmounted\");\n      return;\n    }\n    \n    const map = mapInstanceRef.current;\n    \n    // Update map view\n    try {\n      map.setView(\n        [userCoordinates.latitude, userCoordinates.longitude],\n        12\n      );\n      \n      console.log(`Map view updated to: ${userCoordinates.latitude}, ${userCoordinates.longitude}`);\n    } catch (e) {\n      console.error(\"Error updating map view:\", e);\n    }\n    \n    // Clean up previous markers\n    if (userMarkerRef.current) {\n      userMarkerRef.current.remove();\n      userMarkerRef.current = null;\n    }\n    \n    if (userCircleRef.current) {\n      userCircleRef.current.remove();\n      userCircleRef.current = null;\n    }\n    \n    try {\n      console.log(\"Creating user marker and circle\");\n      \n      // Create marker for user location with custom icon\n      const userIcon = createUserIcon();\n      const marker = L.marker(\n        [userCoordinates.latitude, userCoordinates.longitude], \n        { icon: userIcon }\n      ).addTo(map);\n      \n      // Add popup to marker\n      marker.bindPopup(`\n        <div class=\"text-center\">\n          <p class=\"font-medium\">Your Location</p>\n          <p class=\"text-xs text-muted-foreground\">\n            ${userCoordinates.latitude.toFixed(6)}, ${userCoordinates.longitude.toFixed(6)}\n          </p>\n        </div>\n      `);\n      \n      // Calculate radius in meters (distance is in km)\n      const radiusInMeters = (distance || 10) * 1000;\n      \n      // Create circle around user location\n      const circle = L.circle(\n        [userCoordinates.latitude, userCoordinates.longitude],\n        {\n          radius: radiusInMeters,\n          color: '#2196F3',\n          fillColor: '#2196F3',\n          fillOpacity: 0.1,\n          weight: 2\n        }\n      ).addTo(map);\n      \n      // Store references\n      userMarkerRef.current = marker;\n      userCircleRef.current = circle;\n      \n      console.log(`User marker and circle (${radiusInMeters}m radius) added to map`);\n      \n      // Adjust zoom level based on radius\n      const adjustZoom = () => {\n        if (distance && distance > 25) {\n          map.setZoom(10);\n        } else if (distance && distance > 10) {\n          map.setZoom(11);\n        } else {\n          map.setZoom(12);\n        }\n      };\n      \n      adjustZoom();\n    } catch (e) {\n      console.error(\"Error updating user location on map:\", e);\n    }\n  };\n  \n  // Function to update event markers\n  const updateEventMarkers = () => {\n    // Check if we're in a browser environment\n    if (typeof window === 'undefined') return;\n    \n    // Check prerequisites with detailed logging\n    if (!mapInstanceRef.current) {\n      console.log(\"Cannot update event markers - map not initialized\");\n      return;\n    }\n    \n    if (!isMountedRef.current) {\n      console.log(\"Cannot update event markers - component unmounted\");\n      return;\n    }\n    \n    if (!events.length) {\n      console.log(\"Cannot update event markers - no events to display\");\n      return;\n    }\n    \n    const map = mapInstanceRef.current;\n    \n    console.log(`Updating ${events.length} event markers`);\n    \n    try {\n      // Remove all existing event markers\n      eventMarkersRef.current.forEach((marker) => {\n        if (marker) marker.remove();\n      });\n      eventMarkersRef.current.clear();\n      \n      // Track how many valid events we process\n      let validEventsCount = 0;\n      \n      // Process each event\n      events.forEach((event) => {\n        // Skip events without valid coordinates\n        if (!event.coordinates || \n            !event.coordinates.latitude || \n            !event.coordinates.longitude || \n            isNaN(event.coordinates.latitude) || \n            isNaN(event.coordinates.longitude)) {\n          console.warn(`Event ${event.id} has invalid/missing coordinates`);\n          return;\n        }\n        \n        validEventsCount++;\n        const { latitude, longitude } = event.coordinates;\n        \n        try {\n          // Create marker with custom icon\n          const eventIcon = createEventIcon();\n          const marker = L.marker(\n            [latitude, longitude], \n            { icon: eventIcon }\n          ).addTo(map);\n          \n          // Store reference\n          eventMarkersRef.current.set(event.id, marker);\n          \n          // Enhanced popup content with better styling and information\n          const popupContent = `\n            <div class=\"text-sm p-2 min-w-[250px] max-w-[300px]\">\n              <div class=\"font-medium text-base mb-2 text-gray-900 leading-tight\">${event.name}</div>\n              \n              <div class=\"space-y-2 mb-3\">\n                <div class=\"flex items-start gap-2\">\n                  <div class=\"text-xs text-gray-500 mt-0.5 font-medium\">📍</div>\n                  <div class=\"text-xs text-gray-600 leading-relaxed\">${event.location}</div>\n                </div>\n                \n                <div class=\"flex items-start gap-2\">\n                  <div class=\"text-xs text-gray-500 mt-0.5 font-medium\">📅</div>\n                  <div class=\"text-xs text-gray-600\">\n                    ${new Date(event.startDate).toLocaleDateString('en-US', {\n                      weekday: 'short',\n                      month: 'short', \n                      day: 'numeric', \n                      year: 'numeric',\n                      hour: 'numeric',\n                      minute: '2-digit'\n                    })}\n                  </div>\n                </div>\n                \n                ${event.category ? `\n                  <div class=\"flex items-center gap-2\">\n                    <span class=\"inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full font-medium\">\n                      ${event.category}\n                    </span>\n                  </div>\n                ` : ''}\n                \n                ${event.description ? `\n                  <div class=\"text-xs text-gray-600 leading-relaxed mt-2 max-h-16 overflow-hidden\">\n                    ${event.description.length > 100 ? event.description.substring(0, 100) + '...' : event.description}\n                  </div>\n                ` : ''}\n              </div>\n              \n              <div class=\"mt-3 pt-2 border-t border-gray-100\">\n                <button \n                  id=\"view-event-${event.id}\" \n                  class=\"w-full text-xs py-2 px-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors font-medium shadow-sm\"\n                >\n                  View Full Details\n                </button>\n              </div>\n            </div>\n          `;\n          \n          marker.bindPopup(popupContent, {\n            maxWidth: 320,\n            className: 'custom-popup'\n          });\n          \n          // Add click handler for marker\n          marker.on('click', () => {\n            if (isMountedRef.current) {\n              console.log(`Event marker clicked: ${event.id}`);\n            }\n          });\n          \n          // Add click handler for popup button\n          marker.on('popupopen', () => {\n            setTimeout(() => {\n              if (!isMountedRef.current) return;\n              \n              const button = document.getElementById(`view-event-${event.id}`);\n              if (button) {\n                button.addEventListener('click', () => {\n                  if (isMountedRef.current) {\n                    console.log(`View details clicked for event: ${event.id}`);\n                    onEventSelect(event);\n                    // Close the popup but keep marker visible\n                    marker.closePopup();\n                  }\n                });\n              }\n            }, 10);\n          });\n          \n          console.log(`Added marker for event ${event.id} at ${latitude}, ${longitude}`);\n        } catch (err) {\n          console.error(`Error creating marker for event ${event.id}:`, err);\n        }\n      });\n      \n      console.log(`${validEventsCount} events have valid coordinates`);\n    } catch (e) {\n      console.error(\"Error updating event markers:\", e);\n    }\n  };\n\n  // Initialize map when component mounts in the browser\n  useEffect(() => {\n    // Skip if not client-side\n    if (typeof window === 'undefined') {\n      console.log(\"Skipping map initialization - not in browser\");\n      return;\n    }\n    \n    // Set mounted flag\n    isMountedRef.current = true;\n    \n    console.log(\"Component mounted, initializing map...\");\n    \n    // Delay initialization slightly to ensure DOM is ready\n    const initTimer = setTimeout(() => {\n      initializeMap();\n    }, 100);\n    \n    // Create resize observer\n    const observer = new ResizeObserver((entries) => {\n      if (entries[0] && isMountedRef.current) {\n        const { width, height } = entries[0].contentRect;\n        setMapDimensions({ width, height });\n      }\n    });\n    \n    // Start observing after a short delay\n    const observerTimer = setTimeout(() => {\n      if (mapContainerRef.current && isMountedRef.current) {\n        observer.observe(mapContainerRef.current);\n      }\n    }, 200);\n    \n    // Clean up on unmount\n    return () => {\n      console.log(\"Component unmounting, cleaning up...\");\n      isMountedRef.current = false;\n      \n      clearTimeout(initTimer);\n      clearTimeout(observerTimer);\n      \n      if (mapContainerRef.current) {\n        observer.unobserve(mapContainerRef.current);\n      }\n      \n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n  \n  // Handle container resizing\n  useEffect(() => {\n    if (mapInstanceRef.current && mapDimensions.width > 0 && mapDimensions.height > 0) {\n      console.log(`Map container resized: ${mapDimensions.width}x${mapDimensions.height}`);\n      mapInstanceRef.current.invalidateSize();\n    }\n  }, [mapDimensions]);\n  \n  // Update user location when coordinates change\n  useEffect(() => {\n    if (isMapInitialized && userCoordinates) {\n      console.log(\"User coordinates changed, updating location\");\n      updateUserLocation();\n    } else if (userCoordinates && !isMapInitialized) {\n      console.log(\"Have user coordinates but map not initialized yet\");\n    }\n  }, [userCoordinates, distance, isMapInitialized]);\n  \n  // Update event markers when events change\n  useEffect(() => {\n    if (isMapInitialized && !loading) {\n      if (events.length > 0) {\n        console.log(\"Events updated and map initialized, updating markers\");\n        updateEventMarkers();\n      } else {\n        console.log(\"No events to display\");\n      }\n    } else if (events.length > 0 && !isMapInitialized) {\n      console.log(\"Have events but map not initialized yet\");\n    }\n  }, [events, loading, isMapInitialized]);\n\n  return (\n    <div\n      ref={mapContainerRef}\n      className=\"w-full h-full min-h-[500px] bg-gray-100\" // Added bg-gray-100 to make container visible during loading\n      style={{ height: '500px' }} // Ensure explicit height is set\n      data-testid=\"map-container\"\n    />\n  );\n};\n\nexport default MapComponent;"],"names":[],"mappings":";;;;AACA;AAIA,0BAA0B;AAC1B;;;AANA;;;;AAoCA,gDAAgD;AAChD,0CAA0C;AAC1C,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AACzB,MAAM,mBAAmB;AAEzB,kCAAkC;AAClC,wCAAmC;IACjC,0BAA0B;IAC1B,OAAO,oJAAA,CAAA,UAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW;IAC3C,oJAAA,CAAA,UAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC1B,SAAS;QACT,eAAe;QACf,WAAW;IACb;AACF;AAEA,0BAA0B;AAC1B,MAAM,iBAAiB;IACrB,OAAO,oJAAA,CAAA,UAAC,CAAC,IAAI,CAAC;QACZ,SAAS;QACT,eAAe;QACf,WAAW;QACX,UAAU;YAAC;YAAI;SAAG;QAClB,YAAY;YAAC;YAAI;SAAG;QACpB,aAAa;YAAC;YAAG,CAAC;SAAG;QACrB,YAAY;YAAC;YAAI;SAAG;IACtB;AACF;AAEA,MAAM,kBAAkB;IACtB,OAAO,oJAAA,CAAA,UAAC,CAAC,IAAI,CAAC;QACZ,SAAS;QACT,eAAe;QACf,WAAW;QACX,UAAU;YAAC;YAAI;SAAG;QAClB,YAAY;YAAC;YAAI;SAAG;QACpB,aAAa;YAAC;YAAG,CAAC;SAAG;QACrB,YAAY;YAAC;YAAI;SAAG;IACtB;AACF;AAEA,MAAM,eAAe,CAAC,EACpB,eAAe,EACf,MAAM,EACN,OAAO,EACP,aAAa,EACb,kBAAkB,EAClB,WAAW,GAAG,yBAAyB;AAA1B,EACK;;IAClB,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC/C,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAO;IACnC,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAO;IACpC,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAO;IAClC,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAO;IAClC,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB,IAAI,QAAQ,uCAAuC;IAEpG,wCAAwC;IACxC,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAW;IAErC,mDAAmD;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,OAAO;QAAG,QAAQ;IAAE;IAEzE,oCAAoC;IACpC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,2DAA2D;IAC3D,MAAM,gBAAgB;QACpB,kDAAkD;QAClD,uCAAmC;;QAAM;QAEzC,gEAAgE;QAChE,IAAI,CAAC,gBAAgB,OAAO,IAAI,eAAe,OAAO,EAAE;YACtD;QACF;QAEA,QAAQ,GAAG,CAAC;QAEZ,IAAI;YACF,sDAAsD;YACtD,IAAI,gBAAgB,OAAO,CAAC,YAAY,KAAK,GAAG;gBAC9C,gBAAgB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG;YACzC;YAEA,uBAAuB;YACvB,MAAM,gBAAkC,kBACpC;gBAAC,gBAAgB,QAAQ;gBAAE,gBAAgB,SAAS;aAAC,GACrD;gBAAC;gBAAS,CAAC;aAAQ;YAEvB,iBAAiB;YACjB,MAAM,MAAM,oJAAA,CAAA,UAAC,CAAC,GAAG,CAAC,gBAAgB,OAAO,EAAE;gBACzC,QAAQ;gBACR,MAAM;gBACN,oBAAoB;YACtB;YAEA,iBAAiB;YACjB,oJAAA,CAAA,UAAC,CAAC,SAAS,CAAC,sDAAsD;gBAChE,aAAa;YACf,GAAG,KAAK,CAAC;YAET,2BAA2B;YAC3B,MAAM,eAAe,oJAAA,CAAA,UAAC,CAAC,UAAU,GAAG,KAAK,CAAC;YAE1C,mBAAmB;YACnB,eAAe,OAAO,GAAG;YACzB,gBAAgB,OAAO,GAAG;YAE1B,4BAA4B;YAC5B,IAAI,EAAE,CAAC,SAAS,CAAC;gBACf,IAAI,sBAAsB,aAAa,OAAO,EAAE;oBAC9C,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM;oBAC7B,mBAAmB;wBACjB,UAAU;wBACV,WAAW;oBACb;oBAEA,+BAA+B;oBAC/B,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE,KAAK;gBAC9C;YACF;YAEA,0BAA0B;YAC1B,oBAAoB;YAEpB,uEAAuE;YACvE,WAAW;gBACT,IAAI,OAAO,aAAa,OAAO,EAAE;oBAC/B,IAAI,cAAc;oBAClB,QAAQ,GAAG,CAAC;gBACd;YACF,GAAG;YAEH,mEAAmE;YACnE,IAAI,iBAAiB;gBACnB,WAAW;oBACT;gBACF,GAAG;YACL;YAEA,wDAAwD;YACxD,IAAI,OAAO,MAAM,GAAG,KAAK,CAAC,SAAS;gBACjC,WAAW;oBACT;gBACF,GAAG;YACL;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,0CAA0C;IAC1C,MAAM,qBAAqB;QACzB,0CAA0C;QAC1C,uCAAmC;;QAAM;QAEzC,sBAAsB;QACtB,IAAI,CAAC,eAAe,OAAO,EAAE;YAC3B,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,IAAI,CAAC,iBAAiB;YACpB,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,IAAI,CAAC,aAAa,OAAO,EAAE;YACzB,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,MAAM,MAAM,eAAe,OAAO;QAElC,kBAAkB;QAClB,IAAI;YACF,IAAI,OAAO,CACT;gBAAC,gBAAgB,QAAQ;gBAAE,gBAAgB,SAAS;aAAC,EACrD;YAGF,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,gBAAgB,QAAQ,CAAC,EAAE,EAAE,gBAAgB,SAAS,EAAE;QAC9F,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;QAEA,4BAA4B;QAC5B,IAAI,cAAc,OAAO,EAAE;YACzB,cAAc,OAAO,CAAC,MAAM;YAC5B,cAAc,OAAO,GAAG;QAC1B;QAEA,IAAI,cAAc,OAAO,EAAE;YACzB,cAAc,OAAO,CAAC,MAAM;YAC5B,cAAc,OAAO,GAAG;QAC1B;QAEA,IAAI;YACF,QAAQ,GAAG,CAAC;YAEZ,mDAAmD;YACnD,MAAM,WAAW;YACjB,MAAM,SAAS,oJAAA,CAAA,UAAC,CAAC,MAAM,CACrB;gBAAC,gBAAgB,QAAQ;gBAAE,gBAAgB,SAAS;aAAC,EACrD;gBAAE,MAAM;YAAS,GACjB,KAAK,CAAC;YAER,sBAAsB;YACtB,OAAO,SAAS,CAAC,CAAC;;;;YAIZ,EAAE,gBAAgB,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,gBAAgB,SAAS,CAAC,OAAO,CAAC,GAAG;;;MAGrF,CAAC;YAED,iDAAiD;YACjD,MAAM,iBAAiB,CAAC,YAAY,EAAE,IAAI;YAE1C,qCAAqC;YACrC,MAAM,SAAS,oJAAA,CAAA,UAAC,CAAC,MAAM,CACrB;gBAAC,gBAAgB,QAAQ;gBAAE,gBAAgB,SAAS;aAAC,EACrD;gBACE,QAAQ;gBACR,OAAO;gBACP,WAAW;gBACX,aAAa;gBACb,QAAQ;YACV,GACA,KAAK,CAAC;YAER,mBAAmB;YACnB,cAAc,OAAO,GAAG;YACxB,cAAc,OAAO,GAAG;YAExB,QAAQ,GAAG,CAAC,CAAC,wBAAwB,EAAE,eAAe,sBAAsB,CAAC;YAE7E,oCAAoC;YACpC,MAAM,aAAa;gBACjB,IAAI,YAAY,WAAW,IAAI;oBAC7B,IAAI,OAAO,CAAC;gBACd,OAAO,IAAI,YAAY,WAAW,IAAI;oBACpC,IAAI,OAAO,CAAC;gBACd,OAAO;oBACL,IAAI,OAAO,CAAC;gBACd;YACF;YAEA;QACF,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,mCAAmC;IACnC,MAAM,qBAAqB;QACzB,0CAA0C;QAC1C,uCAAmC;;QAAM;QAEzC,4CAA4C;QAC5C,IAAI,CAAC,eAAe,OAAO,EAAE;YAC3B,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,IAAI,CAAC,aAAa,OAAO,EAAE;YACzB,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,IAAI,CAAC,OAAO,MAAM,EAAE;YAClB,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,MAAM,MAAM,eAAe,OAAO;QAElC,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,OAAO,MAAM,CAAC,cAAc,CAAC;QAErD,IAAI;YACF,oCAAoC;YACpC,gBAAgB,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC/B,IAAI,QAAQ,OAAO,MAAM;YAC3B;YACA,gBAAgB,OAAO,CAAC,KAAK;YAE7B,yCAAyC;YACzC,IAAI,mBAAmB;YAEvB,qBAAqB;YACrB,OAAO,OAAO,CAAC,CAAC;gBACd,wCAAwC;gBACxC,IAAI,CAAC,MAAM,WAAW,IAClB,CAAC,MAAM,WAAW,CAAC,QAAQ,IAC3B,CAAC,MAAM,WAAW,CAAC,SAAS,IAC5B,MAAM,MAAM,WAAW,CAAC,QAAQ,KAChC,MAAM,MAAM,WAAW,CAAC,SAAS,GAAG;oBACtC,QAAQ,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,gCAAgC,CAAC;oBAChE;gBACF;gBAEA;gBACA,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAM,WAAW;gBAEjD,IAAI;oBACF,iCAAiC;oBACjC,MAAM,YAAY;oBAClB,MAAM,SAAS,oJAAA,CAAA,UAAC,CAAC,MAAM,CACrB;wBAAC;wBAAU;qBAAU,EACrB;wBAAE,MAAM;oBAAU,GAClB,KAAK,CAAC;oBAER,kBAAkB;oBAClB,gBAAgB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE;oBAEtC,6DAA6D;oBAC7D,MAAM,eAAe,CAAC;;kFAEkD,EAAE,MAAM,IAAI,CAAC;;;;;qEAK1B,EAAE,MAAM,QAAQ,CAAC;;;;;;oBAMlE,EAAE,IAAI,KAAK,MAAM,SAAS,EAAE,kBAAkB,CAAC,SAAS;wBACtD,SAAS;wBACT,OAAO;wBACP,KAAK;wBACL,MAAM;wBACN,MAAM;wBACN,QAAQ;oBACV,GAAG;;;;gBAIP,EAAE,MAAM,QAAQ,GAAG,CAAC;;;sBAGd,EAAE,MAAM,QAAQ,CAAC;;;gBAGvB,CAAC,GAAG,GAAG;;gBAEP,EAAE,MAAM,WAAW,GAAG,CAAC;;oBAEnB,EAAE,MAAM,WAAW,CAAC,MAAM,GAAG,MAAM,MAAM,WAAW,CAAC,SAAS,CAAC,GAAG,OAAO,QAAQ,MAAM,WAAW,CAAC;;gBAEvG,CAAC,GAAG,GAAG;;;;;iCAKU,EAAE,MAAM,EAAE,CAAC;;;;;;;UAOlC,CAAC;oBAED,OAAO,SAAS,CAAC,cAAc;wBAC7B,UAAU;wBACV,WAAW;oBACb;oBAEA,+BAA+B;oBAC/B,OAAO,EAAE,CAAC,SAAS;wBACjB,IAAI,aAAa,OAAO,EAAE;4BACxB,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,MAAM,EAAE,EAAE;wBACjD;oBACF;oBAEA,qCAAqC;oBACrC,OAAO,EAAE,CAAC,aAAa;wBACrB,WAAW;4BACT,IAAI,CAAC,aAAa,OAAO,EAAE;4BAE3B,MAAM,SAAS,SAAS,cAAc,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE;4BAC/D,IAAI,QAAQ;gCACV,OAAO,gBAAgB,CAAC,SAAS;oCAC/B,IAAI,aAAa,OAAO,EAAE;wCACxB,QAAQ,GAAG,CAAC,CAAC,gCAAgC,EAAE,MAAM,EAAE,EAAE;wCACzD,cAAc;wCACd,0CAA0C;wCAC1C,OAAO,UAAU;oCACnB;gCACF;4BACF;wBACF,GAAG;oBACL;oBAEA,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,WAAW;gBAC/E,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE;gBAChE;YACF;YAEA,QAAQ,GAAG,CAAC,GAAG,iBAAiB,8BAA8B,CAAC;QACjE,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC,iCAAiC;QACjD;IACF;IAEA,sDAAsD;IACtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,0BAA0B;YAC1B,uCAAmC;;YAGnC;YAEA,mBAAmB;YACnB,aAAa,OAAO,GAAG;YAEvB,QAAQ,GAAG,CAAC;YAEZ,uDAAuD;YACvD,MAAM,YAAY;oDAAW;oBAC3B;gBACF;mDAAG;YAEH,yBAAyB;YACzB,MAAM,WAAW,IAAI;0CAAe,CAAC;oBACnC,IAAI,OAAO,CAAC,EAAE,IAAI,aAAa,OAAO,EAAE;wBACtC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,WAAW;wBAChD,iBAAiB;4BAAE;4BAAO;wBAAO;oBACnC;gBACF;;YAEA,sCAAsC;YACtC,MAAM,gBAAgB;wDAAW;oBAC/B,IAAI,gBAAgB,OAAO,IAAI,aAAa,OAAO,EAAE;wBACnD,SAAS,OAAO,CAAC,gBAAgB,OAAO;oBAC1C;gBACF;uDAAG;YAEH,sBAAsB;YACtB;0CAAO;oBACL,QAAQ,GAAG,CAAC;oBACZ,aAAa,OAAO,GAAG;oBAEvB,aAAa;oBACb,aAAa;oBAEb,IAAI,gBAAgB,OAAO,EAAE;wBAC3B,SAAS,SAAS,CAAC,gBAAgB,OAAO;oBAC5C;oBAEA,IAAI,eAAe,OAAO,EAAE;wBAC1B,eAAe,OAAO,CAAC,MAAM;wBAC7B,eAAe,OAAO,GAAG;oBAC3B;gBACF;;QACF;iCAAG,EAAE;IAEL,4BAA4B;IAC5B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,eAAe,OAAO,IAAI,cAAc,KAAK,GAAG,KAAK,cAAc,MAAM,GAAG,GAAG;gBACjF,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,cAAc,KAAK,CAAC,CAAC,EAAE,cAAc,MAAM,EAAE;gBACnF,eAAe,OAAO,CAAC,cAAc;YACvC;QACF;iCAAG;QAAC;KAAc;IAElB,+CAA+C;IAC/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,oBAAoB,iBAAiB;gBACvC,QAAQ,GAAG,CAAC;gBACZ;YACF,OAAO,IAAI,mBAAmB,CAAC,kBAAkB;gBAC/C,QAAQ,GAAG,CAAC;YACd;QACF;iCAAG;QAAC;QAAiB;QAAU;KAAiB;IAEhD,0CAA0C;IAC1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,oBAAoB,CAAC,SAAS;gBAChC,IAAI,OAAO,MAAM,GAAG,GAAG;oBACrB,QAAQ,GAAG,CAAC;oBACZ;gBACF,OAAO;oBACL,QAAQ,GAAG,CAAC;gBACd;YACF,OAAO,IAAI,OAAO,MAAM,GAAG,KAAK,CAAC,kBAAkB;gBACjD,QAAQ,GAAG,CAAC;YACd;QACF;iCAAG;QAAC;QAAQ;QAAS;KAAiB;IAEtC,qBACE,6LAAC;QACC,KAAK;QACL,WAAU,0CAA0C,6DAA6D;;QACjH,OAAO;YAAE,QAAQ;QAAQ;QACzB,eAAY;;;;;;AAGlB;GA5cM;KAAA;uCA8cS","debugId":null}}]
}